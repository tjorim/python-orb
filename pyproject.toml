[tool.poetry]
name = "python-orb"
version = "0.1.0"
description = "Async Python client for the Orb local API â€” query datasets, manage configurations, and fetch analytics from Orb locally."
authors = ["python-orb contributors"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/tjorim/python-orb"
repository = "https://github.com/tjorim/python-orb"
documentation = "https://github.com/tjorim/python-orb"
keywords = ["orb", "analytics"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [
    { include = "orb" },
]

[tool.poetry.dependencies]
python = "^3.9"
aiohttp = "^3.11.11"
mashumaro = {extras = ["orjson"], version = "^3.15"}
tenacity = "^8.0.0"

[tool.poetry.group.test.dependencies]
pytest = "^8.3.4"
pytest-mock = "^3.14.0"
pytest-asyncio = ">=0.25.1,<1.3.0"
respx = "^0.22.0"

[tool.poetry.group.dev.dependencies]
ruff = ">=0.8.4,<0.14.0"
mypy = "^1.14.1"

[tool.mypy]
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
exclude = ["^tests/"]
no_implicit_optional = true
python_version = "3.9"
show_error_codes = true
strict = true
strict_equality = true
warn_return_any = true
warn_unused_configs = true

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "C",  # complexity
    "D",  # docstrings
    "E",  # pycodestyle
    "F",  # pyflakes
    "G",  # flake8-logging-format
    "I",  # isort
    "W",  # pycodestyle warnings
]
ignore = [
    "D203", # vs D211 (no blank line before class)
    "D213", # vs D212 (multi line summary first line)
    "E501", # line too long
    "W191", # indentation contains tabs
]

[tool.ruff.lint.isort]
force-sort-within-sections = true
combine-as-imports = true
split-on-trailing-comma = false

[tool.ruff.lint.pydocstyle]
property-decorators = ["propcache.cached_property"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
addopts = "-v --tb=short"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"